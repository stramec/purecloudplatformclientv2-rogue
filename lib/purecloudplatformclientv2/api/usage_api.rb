=begin
PureCloud Platform API

With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.

OpenAPI spec version: v2
Contact: DeveloperEvangelists@genesys.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: UNLICENSED
https://help.mypurecloud.com/articles/terms-and-conditions/

Terms of Service: https://help.mypurecloud.com/articles/terms-and-conditions/

=end

require "uri"

module PureCloud
  class UsageApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Get the results of a usage query
    # 
    # @param execution_id ID of the query execution
    # @param [Hash] opts the optional parameters
    # @return [ApiUsageQueryResult]
    def get_usage_query_execution_id_results(execution_id, opts = {})
      data, _status_code, _headers = get_usage_query_execution_id_results_with_http_info(execution_id, opts)
      return data
    end

    # Get the results of a usage query
    # 
    # @param execution_id ID of the query execution
    # @param [Hash] opts the optional parameters
    # @return [Array<(ApiUsageQueryResult, Fixnum, Hash)>] ApiUsageQueryResult data, response status code and response headers
    def get_usage_query_execution_id_results_with_http_info(execution_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: UsageApi.get_usage_query_execution_id_results ..."
      end
      
      
      # verify the required parameter 'execution_id' is set
      fail ArgumentError, "Missing the required parameter 'execution_id' when calling UsageApi.get_usage_query_execution_id_results" if execution_id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/v2/usage/query/{executionId}/results".sub('{format}','json').sub('{' + 'executionId' + '}', execution_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = ['PureCloud OAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'ApiUsageQueryResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: UsageApi#get_usage_query_execution_id_results\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Query organization API Usage - 
    # After calling this method, you will then need to poll for the query results based on the returned execution Id
    # @param body Query
    # @param [Hash] opts the optional parameters
    # @return [UsageExecutionResult]
    def post_usage_query(body, opts = {})
      data, _status_code, _headers = post_usage_query_with_http_info(body, opts)
      return data
    end

    # Query organization API Usage - 
    # After calling this method, you will then need to poll for the query results based on the returned execution Id
    # @param body Query
    # @param [Hash] opts the optional parameters
    # @return [Array<(UsageExecutionResult, Fixnum, Hash)>] UsageExecutionResult data, response status code and response headers
    def post_usage_query_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: UsageApi.post_usage_query ..."
      end
      
      
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling UsageApi.post_usage_query" if body.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/v2/usage/query".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      
      auth_names = ['PureCloud OAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'UsageExecutionResult')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: UsageApi#post_usage_query\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
