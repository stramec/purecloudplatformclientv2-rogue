=begin
PureCloud Platform API

With the PureCloud Platform API, you can control all aspects of your PureCloud environment. With the APIs you can access the system configuration, manage conversations and more.

OpenAPI spec version: v2
Contact: DeveloperEvangelists@genesys.com
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: UNLICENSED
https://help.mypurecloud.com/articles/terms-and-conditions/

Terms of Service: https://help.mypurecloud.com/articles/terms-and-conditions/

=end

require "uri"

module PureCloud
  class WidgetsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Delete a Widget deployment
    # 
    # @param deployment_id Widget Config Id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_widgets_deployment(deployment_id, opts = {})
      delete_widgets_deployment_with_http_info(deployment_id, opts)
      return nil
    end

    # Delete a Widget deployment
    # 
    # @param deployment_id Widget Config Id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_widgets_deployment_with_http_info(deployment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: WidgetsApi.delete_widgets_deployment ..."
      end
      
      
      # verify the required parameter 'deployment_id' is set
      fail ArgumentError, "Missing the required parameter 'deployment_id' when calling WidgetsApi.delete_widgets_deployment" if deployment_id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/v2/widgets/deployments/{deploymentId}".sub('{format}','json').sub('{' + 'deploymentId' + '}', deployment_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = ['PureCloud OAuth']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WidgetsApi#delete_widgets_deployment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get a Widget deployment
    # 
    # @param deployment_id Widget Config Id
    # @param [Hash] opts the optional parameters
    # @return [WidgetDeployment]
    def get_widgets_deployment(deployment_id, opts = {})
      data, _status_code, _headers = get_widgets_deployment_with_http_info(deployment_id, opts)
      return data
    end

    # Get a Widget deployment
    # 
    # @param deployment_id Widget Config Id
    # @param [Hash] opts the optional parameters
    # @return [Array<(WidgetDeployment, Fixnum, Hash)>] WidgetDeployment data, response status code and response headers
    def get_widgets_deployment_with_http_info(deployment_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: WidgetsApi.get_widgets_deployment ..."
      end
      
      
      # verify the required parameter 'deployment_id' is set
      fail ArgumentError, "Missing the required parameter 'deployment_id' when calling WidgetsApi.get_widgets_deployment" if deployment_id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/v2/widgets/deployments/{deploymentId}".sub('{format}','json').sub('{' + 'deploymentId' + '}', deployment_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = ['PureCloud OAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'WidgetDeployment')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WidgetsApi#get_widgets_deployment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List Widget deployments
    # 
    # @param [Hash] opts the optional parameters
    # @return [WidgetDeploymentEntityListing]
    def get_widgets_deployments(opts = {})
      data, _status_code, _headers = get_widgets_deployments_with_http_info(opts)
      return data
    end

    # List Widget deployments
    # 
    # @param [Hash] opts the optional parameters
    # @return [Array<(WidgetDeploymentEntityListing, Fixnum, Hash)>] WidgetDeploymentEntityListing data, response status code and response headers
    def get_widgets_deployments_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: WidgetsApi.get_widgets_deployments ..."
      end
      
      # resource path
      local_var_path = "/api/v2/widgets/deployments".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = ['PureCloud OAuth']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'WidgetDeploymentEntityListing')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WidgetsApi#get_widgets_deployments\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create Widget deployment
    # 
    # @param body Deployment
    # @param [Hash] opts the optional parameters
    # @return [WidgetDeployment]
    def post_widgets_deployments(body, opts = {})
      data, _status_code, _headers = post_widgets_deployments_with_http_info(body, opts)
      return data
    end

    # Create Widget deployment
    # 
    # @param body Deployment
    # @param [Hash] opts the optional parameters
    # @return [Array<(WidgetDeployment, Fixnum, Hash)>] WidgetDeployment data, response status code and response headers
    def post_widgets_deployments_with_http_info(body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: WidgetsApi.post_widgets_deployments ..."
      end
      
      
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling WidgetsApi.post_widgets_deployments" if body.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/v2/widgets/deployments".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      
      auth_names = ['PureCloud OAuth']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'WidgetDeployment')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WidgetsApi#post_widgets_deployments\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update a Widget deployment
    # 
    # @param deployment_id Widget Config Id
    # @param body Deployment
    # @param [Hash] opts the optional parameters
    # @return [WidgetDeployment]
    def put_widgets_deployment(deployment_id, body, opts = {})
      data, _status_code, _headers = put_widgets_deployment_with_http_info(deployment_id, body, opts)
      return data
    end

    # Update a Widget deployment
    # 
    # @param deployment_id Widget Config Id
    # @param body Deployment
    # @param [Hash] opts the optional parameters
    # @return [Array<(WidgetDeployment, Fixnum, Hash)>] WidgetDeployment data, response status code and response headers
    def put_widgets_deployment_with_http_info(deployment_id, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: WidgetsApi.put_widgets_deployment ..."
      end
      
      
      # verify the required parameter 'deployment_id' is set
      fail ArgumentError, "Missing the required parameter 'deployment_id' when calling WidgetsApi.put_widgets_deployment" if deployment_id.nil?
      
      
      
      
      
      
      # verify the required parameter 'body' is set
      fail ArgumentError, "Missing the required parameter 'body' when calling WidgetsApi.put_widgets_deployment" if body.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/api/v2/widgets/deployments/{deploymentId}".sub('{format}','json').sub('{' + 'deploymentId' + '}', deployment_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(body)
      
      auth_names = ['PureCloud OAuth']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'WidgetDeployment')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: WidgetsApi#put_widgets_deployment\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
